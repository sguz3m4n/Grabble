// <auto-generated />
using System;
using Grabble.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Grabble.Repository.Migrations
{
    [DbContext(typeof(ItemContext))]
    partial class ItemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Grabble.Data.Domain.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AttributeDescription");

                    b.Property<string>("AttributesXml");

                    b.Property<string>("BarcodeNumber")
                        .IsRequired();

                    b.Property<string>("ContentCode");

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateDate");

                    b.Property<decimal>("DiscountAmountExclTax");

                    b.Property<decimal>("DiscountAmountInclTax");

                    b.Property<int>("DownloadCount");

                    b.Property<string>("IPAddress");

                    b.Property<bool>("IsDownloadActivated");

                    b.Property<Guid>("ItemGuid");

                    b.Property<decimal>("ItemHeight");

                    b.Property<decimal>("ItemVolume");

                    b.Property<decimal?>("ItemWeight")
                        .IsRequired();

                    b.Property<decimal>("ItemWidht");

                    b.Property<int?>("LicenseDownloadId");

                    b.Property<string>("ModifyBy");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<int>("OrderId");

                    b.Property<decimal>("OriginalProductCost");

                    b.Property<decimal>("PriceExclTax");

                    b.Property<decimal>("PriceInclTax");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPriceExclTax");

                    b.Property<decimal>("UnitPriceInclTax");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
