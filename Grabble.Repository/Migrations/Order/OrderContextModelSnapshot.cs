// <auto-generated />
using System;
using Grabble.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Grabble.Repository.Migrations.Order
{
    [DbContext(typeof(OrderContext))]
    partial class OrderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Grabble.Data.Domain.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AffiliateId");

                    b.Property<bool>("AllowStoringCreditCardNumber");

                    b.Property<string>("AuthorizationTransactionCode");

                    b.Property<string>("AuthorizationTransactionId")
                        .IsRequired();

                    b.Property<string>("AuthorizationTransactionResult");

                    b.Property<int>("BillingAddressId");

                    b.Property<string>("CaptureTransactionId")
                        .IsRequired();

                    b.Property<string>("CaptureTransactionResult");

                    b.Property<string>("CardCvv2")
                        .IsRequired();

                    b.Property<string>("CardExpirationMonth")
                        .IsRequired();

                    b.Property<string>("CardExpirationYear");

                    b.Property<string>("CardName")
                        .IsRequired();

                    b.Property<string>("CardNumber");

                    b.Property<string>("CardType")
                        .IsRequired();

                    b.Property<string>("CheckoutAttributeDescription");

                    b.Property<string>("CheckoutAttributesXml");

                    b.Property<int>("ConsumerId");

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("CreatedOnUtc");

                    b.Property<decimal>("CurrencyRate");

                    b.Property<string>("CustomOrderNumber");

                    b.Property<string>("CustomValuesXml");

                    b.Property<string>("CustomerCurrencyCode")
                        .IsRequired();

                    b.Property<string>("CustomerIp");

                    b.Property<int>("CustomerLanguageId");

                    b.Property<int>("CustomerTaxDisplayTypeId");

                    b.Property<bool>("Deleted");

                    b.Property<string>("IPAddress");

                    b.Property<string>("MaskedCreditCardNumber");

                    b.Property<string>("ModifyBy");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<decimal>("OrderDiscount");

                    b.Property<Guid>("OrderGuid");

                    b.Property<decimal>("OrderShippingExclTax");

                    b.Property<decimal>("OrderShippingInclTax");

                    b.Property<int>("OrderStatusId");

                    b.Property<decimal>("OrderSubTotalDiscountExclTax");

                    b.Property<decimal>("OrderSubTotalDiscountInclTax");

                    b.Property<decimal>("OrderSubtotalExclTax");

                    b.Property<decimal>("OrderSubtotalInclTax");

                    b.Property<decimal>("OrderTax");

                    b.Property<decimal>("OrderTotal");

                    b.Property<DateTime?>("PaidDateUtc");

                    b.Property<decimal>("PaymentMethodAdditionalFeeExclTax");

                    b.Property<decimal>("PaymentMethodAdditionalFeeInclTax");

                    b.Property<string>("PaymentMethodSystemName");

                    b.Property<int>("PaymentStatusId");

                    b.Property<int?>("PickupAddressId")
                        .IsRequired();

                    b.Property<bool>("PickupInStore");

                    b.Property<decimal>("RefundedAmount");

                    b.Property<int?>("RewardPointsHistoryEntryId");

                    b.Property<int?>("ShippingAddressId")
                        .IsRequired();

                    b.Property<string>("ShippingMethod");

                    b.Property<string>("ShippingRateComputationMethodSystemName");

                    b.Property<int>("ShippingStatusId");

                    b.Property<int>("StoreId");

                    b.Property<string>("SubscriptionTransactionId");

                    b.Property<string>("TaxRates");

                    b.Property<string>("VatNumber");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
